from django.db import models


class GithubUser(models.Model):
    id = models.IntegerField(primary_key=True)

    avatar_url = models.URLField()
    bio = models.TextField()
    blog = models.URLField()
    company = models.CharField(max_length=50)
    created_at = models.DateField()
    email = models.EmailField()
    events_url = models.URLField()
    followers = models.IntegerField()
    followers_url = models.URLField()
    following = models.IntegerField()
    following_url = models.URLField()
    gists_url = models.URLField()
    gravatar_id = models.CharField(max_length=50)
    hireable = models.BooleanField(default=False)
    html_url = models.URLField()
    location = models.CharField(max_length=50)
    login = models.CharField(max_length=50)
    name = models.CharField(max_length=50)
    node_id = models.SlugField()
    organizations_url = models.URLField()
    public_gists = models.IntegerField()
    public_repos = models.IntegerField()
    received_events_url = models.URLField()
    repos_url = models.URLField()
    site_admin = models.BooleanField(default=False)
    starred_url = models.URLField()
    subscriptions_url = models.URLField()
    type = models.CharField(max_length=32)
    updated_at = models.DateField()
    url = models.URLField()


class License(models.Model):
    key = models.CharField(max_length=50)
    name = models.CharField(max_length=50)
    node_id = models.SlugField()
    spdx_id = models.SlugField()
    url = models.URLField()


class Topic(models.Model):
    name = models.CharField(max_length=60)


class GithubRepo(models.Model):
    id = models.IntegerField(primary_key=True)

    archive_url = models.URLField()
    archived = models.BooleanField(default=False)
    assignees_url = models.URLField()
    blobs_url = models.URLField()
    branches_url = models.URLField()
    clone_url = models.URLField()
    collaborators_url = models.URLField()
    comments_url = models.URLField()
    commits_url = models.URLField()
    compare_url = models.URLField()
    contents_url = models.URLField()
    contributors_url = models.URLField()
    created_at = models.DateField()
    default_branch = models.CharField(max_length=50)
    deployments_url = models.URLField()
    description = models.TextField()
    disabled = models.BooleanField(default=False)
    downloads_url = models.URLField()
    events_url = models.URLField()
    fork = models.BooleanField(default=False)
    forks_count = models.IntegerField()
    forks_url = models.URLField()
    full_name = models.CharField(max_length=60)
    git_commits_url = models.URLField()
    git_refs_url = models.URLField()
    git_tags_url = models.URLField()
    git_url = models.URLField()
    has_downloads = models.BooleanField(default=False)
    has_issues = models.BooleanField(default=False)
    has_pages = models.BooleanField(default=False)
    has_projects = models.BooleanField(default=False)
    has_wiki = models.BooleanField(default=False)
    homepage = models.URLField()
    hooks_url = models.URLField()
    html_url = models.URLField()
    issue_comment_url = models.URLField()
    issue_events_url = models.URLField()
    issues_url = models.URLField()
    keys_url = models.URLField()
    labels_url = models.URLField()
    language = models.CharField(max_length=50, null=True)
    languages_url = models.URLField()
    license = models.ForeignKey(License, on_delete=models.DO_NOTHING)
    merges_url = models.URLField()
    milestones_url = models.URLField()
    mirror_url = models.URLField()
    name = models.CharField(max_length=50)
    network_count = models.IntegerField()
    node_id = models.SlugField()
    notifications_url = models.URLField()
    open_issues_count = models.IntegerField()
    owner = models.ForeignKey(GithubUser, null=False, on_delete=models.CASCADE)
    private = models.BooleanField(default=False)
    pulls_url = models.URLField()
    pushed_at = models.DateField()
    releases_url = models.URLField()
    size = models.IntegerField()
    ssh_url = models.URLField()
    stargazers_count = models.IntegerField()
    stargazers_url = models.URLField()
    statuses_url = models.URLField()
    subscribers_count = models.IntegerField()
    subscribers_url = models.URLField()
    subscription_url = models.URLField()
    svn_url = models.URLField()
    tags_url = models.URLField()
    teams_url = models.URLField()
    topics = models.ManyToManyField(Topic)
    trees_url = models.URLField()
    updated_at = models.DateField()
    url = models.URLField()
    watchers_count = models.IntegerField()
